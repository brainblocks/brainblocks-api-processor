# node.js docker image
image: node:8

before_script:
  # Install ssh-agent if not already installed, it is required by Docker.
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

  # Create the SSH directory and give it the right permissions
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  # Use ssh-keyscan to scan the keys of your private server.
  - ssh-keyscan ssh.node1.brainblocks.io >> ~/.ssh/known_hosts
  - ssh-keyscan ssh.node3.brainblocks.io >> ~/.ssh/known_hosts
  - ssh-keyscan git.brainblocks.io >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

services:
  - postgres:latest

variables:
  POSTGRES_DB: brainblocks-test
  POSTGRES_USER: root

#- test
stages:
  - deploy

cache:
  paths:
    - node_modules/

#test:
#  stage: test
#  script:
#    - apt update
#    - apt-get install -yq postgresql postgresql-client libpq-dev
#    - apt-get install -yq --no-install-recommends libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 libnss3
#    - npm ci
#    - npm test
#  artifacts:
#    paths:
#      - node_modules/

deploy:
  stage: deploy
  only:
    refs:
      - master
  script:
    - ssh brainblocks@ssh.node1.brainblocks.io "cd /home/brainblocks/brainblocks && git stash && git pull https://git.brainblocks.io/brainblocks/brainblocks-site.git && npm install && pm2 restart brainblocks && pm2 restart clean"
