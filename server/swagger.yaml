openapi: "3.0.0"
info:
  version: 1.0.0
  title: Brainblocks API
  description: This is the documentation for Brainblocks. For more information, please visit [brainblocks.io](brainblocks.io)
  termsOfService: http://brainblocks.io/terms/
  contact:
    name: Brainblocks Team
    email: ty@brainblocks.io
    url: http://brainblocks.io
servers:
  - url: http://brainblocks.io/api
paths:
  /session:
    post:
      description: Set up a new payment session. This returns a transaction token which can be used for future API calls.
      operationId: session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSession'
      responses:
        '200':
          description: Successful session creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        default:
          description: ValidationError, TokenExpiredError, JsonWebTokenError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/session/{token}/transfer:
    post:
      description: Wait for a successful payment. This waits for up to a certain time you may specify, and returns a success as soon as a payment goes through.
      operationId: session
      parameters:
        - name: token
          in: path
          description: API token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSessionTransfer'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionTransfer'
        default:
          description: ValidationError, TokenExpiredError, JsonWebTokenError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/session/{token}/verify:
    get:
      description: Returns the state of the transaction.
      operationId: session
      parameters:
        - name: token
          in: path
          description: API token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
        default:
          description: ValidationError, TokenExpiredError, JsonWebTokenError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /paypal/session:
    post:
      description: Set up a new Paypal payment session. This returns a transaction token which can be used for future API calls.
      operationId: session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPaypalSession'
      responses:
        '200':
          description: Successful session creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaypalSession'
        default:
          description: ValidationError, TokenExpiredError, JsonWebTokenError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /paypal/execute:
    post:
      description: Executes on a payment_id
      operationId: session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPaypalExecute'
      responses:
        '200':
          description: Successful session creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaypalExecute'
        default:
          description: ValidationError, TokenExpiredError, JsonWebTokenError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    NewSession:
      required:
        - amount
        - currency
        - destination
      properties:   
        amount:
          type: integer
          format: int32   
        currency:
          type: string 
        destination:
          type: string 
    Session:
      required:
        - status
        - token
        - account
        - amount_rai
      properties:
        status:
          type: string
        token:
          type: string    
        account:
          type: string    
        amount_rai:
          type: integer
          format: int32
    
    NewPaypalSession:
      required:
        - amount
        - currency
        - email
        - payment_id
      properties:   
        amount:
          type: integer
          format: int32   
        currency:
          type: string 
        email:
          type: string 
        payment_id:
          type: string 
    PaypalSession:
      required:
        - status
        - token
      properties:
        status:
          type: string
        token:
          type: string
          
    TokenVerify:
      required:
        - type
        - token
        - destination
        - currency
        - amount
        - amount_rai
        - received_rai
        - fulfilled
      properties:   
        type:
          type: string 
        token:
          type: string 
        destination:
          type: string 
        currency:
          type: string 
        amount_rai:
          type: integer
          format: int32   
        received_rai:
          type: integer
          format: int32   
        fulfilled:
          type: boolean
          default: false
          
    NewPaypalExecute:
      required:
        - token
        - payer_id
      properties:
        token:
          type: string 
        payer_id:
          type: string 
    PaypalExecute:
      required:
        - status
      properties:
        status:
          type: string

    NewSessionTransfer:
      required:
        - time
      properties:   
        time:
          type: integer
          format: int32   
    SessionTransfer:
      required:
        - status
        - token
      properties:
        status:
          type: string
        token:
          type: string 
    Error:
      required:
        - status
        - message
      properties:
        code:
          type: boolean
          default: false
        message:
          type: string
